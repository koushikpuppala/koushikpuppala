name: Preview Build and Deployment

env:
  NODE_ENV: preview
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches-ignore: master
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack before setting Node
        run: corepack enable
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: yarn install
      - name: Check for linting errors
        run: yarn lint
      - name: Check for type errors
        run: yarn type

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack before setting Node
        run: corepack enable
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: yarn install
      - name: Install Vercel Globally
        run: npm install --global vercel@latest
      - name: Pull the environment variables
        run: vercel pull --yes ./ --environment=${{ env.NODE_ENV }} --git-branch=${{ github.ref_name }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Upload Project Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: none
    steps:
      - name: Download Project Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > domain.txt
      - name: Assign Deployment URL
        run: vercel alias --token=${{ secrets.VERCEL_TOKEN }} set `cat domain.txt` ${{ env.NODE_ENV }}.koushikpuppala.com
      - name: Save Deployment URL
        id: deployment_url
        run: echo "deployment_url=https://${{env.NODE_ENV}}.koushikpuppala.com" >> $GITHUB_OUTPUT
      - name: Cleanup Domain File
        run: rm domain.txt
    outputs:
      deployment_url: ${{ steps.deployment_url.outputs.deployment_url }}

  release:
    runs-on: ubuntu-latest
    needs: [deploy]
    permissions:
      contents: none
    environment:
      name: Preview
      url: ${{ needs.deploy.outputs.deployment_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Script for Deployment URL and ID
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            core.setOutput('deployment_url', '${{ needs.deploy.outputs.deployment_url }}')
      - name: Action Summary
        run: |
          echo "Deployment URL: ${{ needs.deploy.outputs.deployment_url }}" >> $GITHUB_STEP_SUMMARY
